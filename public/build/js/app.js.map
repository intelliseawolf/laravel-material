{"version":3,"sources":["alerts.js","dialogs.js","spinners.js","mdl-selectfield.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrfile":"app.js","sourcesContent":["$('.dismissible').on('click touchstart', function (event) {\n\tvar trans_speed = 300;\n\t$(this).animate({\n\t\topacity: 0,\n\t\tleft: \"-\"+(trans_speed * 4)\n\t}, trans_speed, function() {});\n});","function mdl_dialog(trigger,close,dialog) {\n  'use strict';\n  var trigger = trigger || '.dialog-button';\n  var close = close || '.dialog-close';\n  var dialog = dialog || '#dialog';\n  if (! document.querySelector(dialog).showModal) {\n      dialogPolyfill.registerDialog(document.querySelector(dialog));\n  }\n  document.querySelector(trigger).addEventListener('click', function(event) {\n    event.preventDefault();\n    dialog = dialog || '#dialog';\n    document.querySelector(dialog).showModal();\n    document.querySelector(dialog).open=true;\n  });\n  document.querySelector(close).addEventListener('click', function(event) {\n    event.preventDefault();\n    dialog = dialog || '#dialog';\n    document.querySelector(dialog).open=true;\n    document.querySelector(dialog).close();\n    document.querySelector(dialog).open=false;\n  });\n}","$(\"form\").submit(function(event) {\n\t$('#submit .mdl-spinner-text').fadeOut(1, function() {\n\t  \t$('form .mdl-spinner').addClass('is-active');\n\t});\n});","(function() {\n  'use strict';\n\n  /**\n   * Class constructor for Select field MDL component.\n   * Implements custom MDL component design pattern not defined yet.\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\n  var MaterialSelectfield = function MaterialSelectfield(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n  };\n  window['MaterialSelectfield'] = MaterialSelectfield;\n\n  MaterialSelectfield.prototype.Constant_ = {\n    // None for now\n  };\n\n  MaterialSelectfield.prototype.CssClasses_ = {\n    LABEL: 'mdl-selectfield__label',\n    SELECT: 'mdl-selectfield__select',\n    IS_DIRTY: 'is-dirty',\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_INVALID: 'is-invalid',\n    IS_UPGRADED: 'is-upgraded'\n  };\n\n  /**\n   * Handle focus.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialSelectfield.prototype.onFocus_ = function(event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n  };\n\n  /**\n   * Handle lost focus.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialSelectfield.prototype.onBlur_ = function(event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n  };\n\n  /**\n   * Handle reset event from outside.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialSelectfield.prototype.onReset_ = function(event) {\n    this.updateClasses_();\n  };\n\n  /**\n   * Handle class updates.\n   *\n   * @private\n   */\n  MaterialSelectfield.prototype.updateClasses_ = function() {\n    this.checkDisabled();\n    this.checkValidity();\n    this.checkDirty();\n  };\n\n  // Public methods.\n\n  /**\n   * Check the disabled state and update field accordingly.\n   *\n   * @public\n   */\n  MaterialSelectfield.prototype.checkDisabled = function() {\n    if (this.select_.disabled) {\n      this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n      this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n  };\n  MaterialSelectfield.prototype['checkDisabled'] = MaterialSelectfield.prototype.checkDisabled;\n\n  /**\n   * Check the validity state and update field accordingly.\n   *\n   * @public\n   */\n  MaterialSelectfield.prototype.checkValidity = function() {\n    if (this.select_.validity.valid) {\n      this.element_.classList.remove(this.CssClasses_.IS_INVALID);\n    } else {\n      this.element_.classList.add(this.CssClasses_.IS_INVALID);\n    }\n  };\n  MaterialSelectfield.prototype['checkValidity'] = MaterialSelectfield.prototype.checkValidity;\n\n  /**\n   * Check the dirty state and update field accordingly.\n   *\n   * @public\n   */\n  MaterialSelectfield.prototype.checkDirty = function() {\n    if (this.select_.value && this.select_.value.length > 0) {\n      this.element_.classList.add(this.CssClasses_.IS_DIRTY);\n    } else {\n      this.element_.classList.remove(this.CssClasses_.IS_DIRTY);\n    }\n  };\n  MaterialSelectfield.prototype['checkDirty'] = MaterialSelectfield.prototype.checkDirty;\n\n  /**\n   * Enable select field.\n   *\n   * @public\n   */\n  MaterialSelectfield.prototype.disable = function() {\n    this.select_.disabled = true;\n    this.updateClasses_();\n  };\n  MaterialSelectfield.prototype['disable'] = MaterialSelectfield.prototype.disable;\n\n  /**\n   * Enable select field.\n   *\n   * @public\n   */\n  MaterialSelectfield.prototype.enable = function() {\n    this.select_.disabled = false;\n    this.updateClasses_();\n  };\n  MaterialSelectfield.prototype['enable'] = MaterialSelectfield.prototype.enable;\n\n  /**\n   * Update select field value.\n   *\n   * @param {string} value The value to which to set the control (optional).\n   * @public\n   */\n  MaterialSelectfield.prototype.change = function(value) {\n    if (value) {\n      this.select_.value = value;\n    }\n    this.updateClasses_();\n  };\n  MaterialSelectfield.prototype['change'] = MaterialSelectfield.prototype.change;\n\n  /**\n   * Initialize element.\n   */\n  MaterialSelectfield.prototype.init = function() {\n    if (this.element_) {\n      this.label_ = this.element_.querySelector('.' + this.CssClasses_.LABEL);\n      this.select_ = this.element_.querySelector('.' + this.CssClasses_.SELECT);\n\n      if (this.select_) {\n        this.boundUpdateClassesHandler = this.updateClasses_.bind(this);\n        this.boundFocusHandler = this.onFocus_.bind(this);\n        this.boundBlurHandler = this.onBlur_.bind(this);\n        this.boundResetHandler = this.onReset_.bind(this);\n        this.select_.addEventListener('change', this.boundUpdateClassesHandler);\n        this.select_.addEventListener('focus', this.boundFocusHandler);\n        this.select_.addEventListener('blur', this.boundBlurHandler);\n        this.select_.addEventListener('reset', this.boundResetHandler);\n\n        this.updateClasses_();\n        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n      }\n    }\n  };\n\n  /**\n   * Downgrade the component\n   *\n   * @private\n   */\n  MaterialSelectfield.prototype.mdlDowngrade_ = function() {\n    this.select_.removeEventListener('change', this.boundUpdateClassesHandler);\n    this.select_.removeEventListener('focus', this.boundFocusHandler);\n    this.select_.removeEventListener('blur', this.boundBlurHandler);\n    this.select_.removeEventListener('reset', this.boundResetHandler);\n  };\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  componentHandler.register({\n    constructor: MaterialSelectfield,\n    classAsString: 'MaterialSelectfield',\n    cssClass: 'mdl-js-selectfield',\n    widget: true\n  });\n})();"],"sourceRoot":"/source/"}