{"version":3,"sources":["alerts.js","dialogs.js","spinners.js","mdl-selectfield.js","jQuery.simpleWeather.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrpfile":"app.js","sourcesContent":["$('.dismissible').on('click touchstart', function (event) {\n\tvar trans_speed = 300;\n\t$(this).animate({\n\t\topacity: 0,\n\t\tleft: \"-\"+(trans_speed * 4)\n\t}, trans_speed, function() {});\n});","function mdl_dialog(trigger,close,dialog) {\n  'use strict';\n  var trigger = trigger || '.dialog-button';\n  var close = close || '.dialog-close';\n  var dialog = dialog || '#dialog';\n  if (! document.querySelector(dialog).showModal) {\n      dialogPolyfill.registerDialog(document.querySelector(dialog));\n  }\n  document.querySelector(trigger).addEventListener('click', function(event) {\n    event.preventDefault();\n    dialog = dialog || '#dialog';\n    document.querySelector(dialog).showModal();\n    document.querySelector(dialog).open=true;\n  });\n  document.querySelector(close).addEventListener('click', function(event) {\n    event.preventDefault();\n    dialog = dialog || '#dialog';\n    document.querySelector(dialog).open=true;\n    document.querySelector(dialog).close();\n    document.querySelector(dialog).open=false;\n  });\n}","$(\"form\").submit(function(event) {\n\t$('#submit .mdl-spinner-text').fadeOut(1, function() {\n\t  \t$('form .mdl-spinner').addClass('is-active');\n\t});\n});","(function() {\n  'use strict';\n\n  /**\n   * Class constructor for Select field MDL component.\n   * Implements custom MDL component design pattern not defined yet.\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\n  var MaterialSelectfield = function MaterialSelectfield(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n  };\n  window['MaterialSelectfield'] = MaterialSelectfield;\n\n  MaterialSelectfield.prototype.Constant_ = {\n    // None for now\n  };\n\n  MaterialSelectfield.prototype.CssClasses_ = {\n    LABEL: 'mdl-selectfield__label',\n    SELECT: 'mdl-selectfield__select',\n    IS_DIRTY: 'is-dirty',\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_INVALID: 'is-invalid',\n    IS_UPGRADED: 'is-upgraded'\n  };\n\n  /**\n   * Handle focus.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialSelectfield.prototype.onFocus_ = function(event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n  };\n\n  /**\n   * Handle lost focus.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialSelectfield.prototype.onBlur_ = function(event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n  };\n\n  /**\n   * Handle reset event from outside.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialSelectfield.prototype.onReset_ = function(event) {\n    this.updateClasses_();\n  };\n\n  /**\n   * Handle class updates.\n   *\n   * @private\n   */\n  MaterialSelectfield.prototype.updateClasses_ = function() {\n    this.checkDisabled();\n    this.checkValidity();\n    this.checkDirty();\n  };\n\n  // Public methods.\n\n  /**\n   * Check the disabled state and update field accordingly.\n   *\n   * @public\n   */\n  MaterialSelectfield.prototype.checkDisabled = function() {\n    if (this.select_.disabled) {\n      this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n      this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n  };\n  MaterialSelectfield.prototype['checkDisabled'] = MaterialSelectfield.prototype.checkDisabled;\n\n  /**\n   * Check the validity state and update field accordingly.\n   *\n   * @public\n   */\n  MaterialSelectfield.prototype.checkValidity = function() {\n    if (this.select_.validity.valid) {\n      this.element_.classList.remove(this.CssClasses_.IS_INVALID);\n    } else {\n      this.element_.classList.add(this.CssClasses_.IS_INVALID);\n    }\n  };\n  MaterialSelectfield.prototype['checkValidity'] = MaterialSelectfield.prototype.checkValidity;\n\n  /**\n   * Check the dirty state and update field accordingly.\n   *\n   * @public\n   */\n  MaterialSelectfield.prototype.checkDirty = function() {\n    if (this.select_.value && this.select_.value.length > 0) {\n      this.element_.classList.add(this.CssClasses_.IS_DIRTY);\n    } else {\n      this.element_.classList.remove(this.CssClasses_.IS_DIRTY);\n    }\n  };\n  MaterialSelectfield.prototype['checkDirty'] = MaterialSelectfield.prototype.checkDirty;\n\n  /**\n   * Enable select field.\n   *\n   * @public\n   */\n  MaterialSelectfield.prototype.disable = function() {\n    this.select_.disabled = true;\n    this.updateClasses_();\n  };\n  MaterialSelectfield.prototype['disable'] = MaterialSelectfield.prototype.disable;\n\n  /**\n   * Enable select field.\n   *\n   * @public\n   */\n  MaterialSelectfield.prototype.enable = function() {\n    this.select_.disabled = false;\n    this.updateClasses_();\n  };\n  MaterialSelectfield.prototype['enable'] = MaterialSelectfield.prototype.enable;\n\n  /**\n   * Update select field value.\n   *\n   * @param {string} value The value to which to set the control (optional).\n   * @public\n   */\n  MaterialSelectfield.prototype.change = function(value) {\n    if (value) {\n      this.select_.value = value;\n    }\n    this.updateClasses_();\n  };\n  MaterialSelectfield.prototype['change'] = MaterialSelectfield.prototype.change;\n\n  /**\n   * Initialize element.\n   */\n  MaterialSelectfield.prototype.init = function() {\n    if (this.element_) {\n      this.label_ = this.element_.querySelector('.' + this.CssClasses_.LABEL);\n      this.select_ = this.element_.querySelector('.' + this.CssClasses_.SELECT);\n\n      if (this.select_) {\n        this.boundUpdateClassesHandler = this.updateClasses_.bind(this);\n        this.boundFocusHandler = this.onFocus_.bind(this);\n        this.boundBlurHandler = this.onBlur_.bind(this);\n        this.boundResetHandler = this.onReset_.bind(this);\n        this.select_.addEventListener('change', this.boundUpdateClassesHandler);\n        this.select_.addEventListener('focus', this.boundFocusHandler);\n        this.select_.addEventListener('blur', this.boundBlurHandler);\n        this.select_.addEventListener('reset', this.boundResetHandler);\n\n        this.updateClasses_();\n        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n      }\n    }\n  };\n\n  /**\n   * Downgrade the component\n   *\n   * @private\n   */\n  MaterialSelectfield.prototype.mdlDowngrade_ = function() {\n    this.select_.removeEventListener('change', this.boundUpdateClassesHandler);\n    this.select_.removeEventListener('focus', this.boundFocusHandler);\n    this.select_.removeEventListener('blur', this.boundBlurHandler);\n    this.select_.removeEventListener('reset', this.boundResetHandler);\n  };\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  componentHandler.register({\n    constructor: MaterialSelectfield,\n    classAsString: 'MaterialSelectfield',\n    cssClass: 'mdl-js-selectfield',\n    widget: true\n  });\n})();","/*! simpleWeather v3.1.0 - http://simpleweatherjs.com */\n(function($) {\n  'use strict';\n\n  function getAltTemp(unit, temp) {\n    if(unit === 'f') {\n      return Math.round((5.0/9.0)*(temp-32.0));\n    } else {\n      return Math.round((9.0/5.0)*temp+32.0);\n    }\n  }\n\n  $.extend({\n    simpleWeather: function(options){\n      options = $.extend({\n        location: '',\n        woeid: '',\n        unit: 'f',\n        success: function(weather){},\n        error: function(message){}\n      }, options);\n\n      var now = new Date();\n      var weatherUrl = 'https://query.yahooapis.com/v1/public/yql?format=json&rnd=' + now.getFullYear() + now.getMonth() + now.getDay() + now.getHours() + '&diagnostics=true&callback=?&q=';\n\n      if(options.location !== '') {\n        /* If latitude/longitude coordinates, need to format a little different. */\n        var location = '';\n        if(/^(\\-?\\d+(\\.\\d+)?),\\s*(\\-?\\d+(\\.\\d+)?)$/.test(options.location)) {\n          location = '(' + options.location + ')';\n        } else {\n          location = options.location;\n        }\n\n        weatherUrl += 'select * from weather.forecast where woeid in (select woeid from geo.places(1) where text=\"' + location + '\") and u=\"' + options.unit + '\"';\n      } else if(options.woeid !== '') {\n        weatherUrl += 'select * from weather.forecast where woeid=' + options.woeid + ' and u=\"' + options.unit + '\"';\n      } else {\n        options.error('Could not retrieve weather due to an invalid location.');\n        return false;\n      }\n\n      $.getJSON(\n        encodeURI(weatherUrl),\n        function(data) {\n          if(data !== null && data.query !== null && data.query.results !== null && data.query.results.channel.description !== 'Yahoo! Weather Error') {\n            var result = data.query.results.channel,\n                weather = {},\n                forecast,\n                compass = ['N', 'NNE', 'NE', 'ENE', 'E', 'ESE', 'SE', 'SSE', 'S', 'SSW', 'SW', 'WSW', 'W', 'WNW', 'NW', 'NNW', 'N'],\n                image404 = 'https://s.yimg.com/os/mit/media/m/weather/images/icons/l/44d-100567.png';\n\n            weather.title = result.item.title;\n            weather.temp = result.item.condition.temp;\n            weather.code = result.item.condition.code;\n            weather.todayCode = result.item.forecast[0].code;\n            weather.currently = result.item.condition.text;\n            weather.high = result.item.forecast[0].high;\n            weather.low = result.item.forecast[0].low;\n            weather.text = result.item.forecast[0].text;\n            weather.humidity = result.atmosphere.humidity;\n            weather.pressure = result.atmosphere.pressure;\n            weather.rising = result.atmosphere.rising;\n            weather.visibility = result.atmosphere.visibility;\n            weather.sunrise = result.astronomy.sunrise;\n            weather.sunset = result.astronomy.sunset;\n            weather.description = result.item.description;\n            weather.city = result.location.city;\n            weather.country = result.location.country;\n            weather.region = result.location.region;\n            weather.updated = result.item.pubDate;\n            weather.link = result.item.link;\n            weather.units = {temp: result.units.temperature, distance: result.units.distance, pressure: result.units.pressure, speed: result.units.speed};\n            weather.wind = {chill: result.wind.chill, direction: compass[Math.round(result.wind.direction / 22.5)], speed: result.wind.speed};\n\n            if(result.item.condition.temp < 80 && result.atmosphere.humidity < 40) {\n              weather.heatindex = -42.379+2.04901523*result.item.condition.temp+10.14333127*result.atmosphere.humidity-0.22475541*result.item.condition.temp*result.atmosphere.humidity-6.83783*(Math.pow(10, -3))*(Math.pow(result.item.condition.temp, 2))-5.481717*(Math.pow(10, -2))*(Math.pow(result.atmosphere.humidity, 2))+1.22874*(Math.pow(10, -3))*(Math.pow(result.item.condition.temp, 2))*result.atmosphere.humidity+8.5282*(Math.pow(10, -4))*result.item.condition.temp*(Math.pow(result.atmosphere.humidity, 2))-1.99*(Math.pow(10, -6))*(Math.pow(result.item.condition.temp, 2))*(Math.pow(result.atmosphere.humidity,2));\n            } else {\n              weather.heatindex = result.item.condition.temp;\n            }\n\n            if(result.item.condition.code == '3200') {\n              weather.thumbnail = image404;\n              weather.image = image404;\n            } else {\n              weather.thumbnail = 'https://s.yimg.com/zz/combo?a/i/us/nws/weather/gr/' + result.item.condition.code + 'ds.png';\n              weather.image = 'https://s.yimg.com/zz/combo?a/i/us/nws/weather/gr/' + result.item.condition.code + 'd.png';\n            }\n\n            weather.alt = {temp: getAltTemp(options.unit, result.item.condition.temp), high: getAltTemp(options.unit, result.item.forecast[0].high), low: getAltTemp(options.unit, result.item.forecast[0].low)};\n            if(options.unit === 'f') {\n              weather.alt.unit = 'c';\n            } else {\n              weather.alt.unit = 'f';\n            }\n\n            weather.forecast = [];\n            for(var i=0;i<result.item.forecast.length;i++) {\n              forecast = result.item.forecast[i];\n              forecast.alt = {high: getAltTemp(options.unit, result.item.forecast[i].high), low: getAltTemp(options.unit, result.item.forecast[i].low)};\n\n              if(result.item.forecast[i].code == \"3200\") {\n                forecast.thumbnail = image404;\n                forecast.image = image404;\n              } else {\n                forecast.thumbnail = 'https://s.yimg.com/zz/combo?a/i/us/nws/weather/gr/' + result.item.forecast[i].code + 'ds.png';\n                forecast.image = 'https://s.yimg.com/zz/combo?a/i/us/nws/weather/gr/' + result.item.forecast[i].code + 'd.png';\n              }\n\n              weather.forecast.push(forecast);\n            }\n\n            options.success(weather);\n          } else {\n            options.error('There was a problem retrieving the latest weather information.');\n          }\n        }\n      );\n      return this;\n    }\n  });\n})(jQuery);\n"],"sourceRoot":"/source/"}