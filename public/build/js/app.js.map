{"version":3,"sources":["alerts.js","dialogs.js","spinners.js","select.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnBA;AACA;AACA;AACA;AACA;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["$('.dismissible').on('click touchstart', function (event) {\n\tvar trans_speed = 300;\n\t$(this).animate({\n\t\topacity: 0,\n\t\tleft: \"-\"+(trans_speed * 4)\n\t}, trans_speed, function() {});\n});","function mdl_dialog(trigger,close,dialog) {\n  'use strict';\n  var trigger = trigger || '.dialog-button';\n  var close = close || '.dialog-close';\n  var dialog = dialog || '#dialog';\n  if (! document.querySelector(dialog).showModal) {\n      dialogPolyfill.registerDialog(document.querySelector(dialog));\n  }\n  document.querySelector(trigger).addEventListener('click', function(event) {\n    event.preventDefault();\n    document.querySelector(dialog).showModal();\n    document.querySelector(dialog).open=true;\n  });\n  document.querySelector(close).addEventListener('click', function(event) {\n    event.preventDefault();\n    document.querySelector(dialog).open=true;\n    document.querySelector(dialog).close();\n    document.querySelector(dialog).open=false;\n  });\n}","$(\"form\").submit(function(event) {\n\t$('#submit .mdl-spinner-text').fadeOut(1, function() {\n\t  \t$('form .mdl-spinner').addClass('is-active');\n\t});\n});","'use strict';\nwindow.onload = function () {\n    mdlSelect.init('.mdl-select');\n    document.addEventListener(\"DOMNodeInserted\", function (ev) {\n        if (ev.relatedNode.querySelectorAll(\".mdl-select\").length > 0) {\n            componentHandler.upgradeDom();\n        }\n    }, false);\n};\n\nvar mdlSelect = {\n    addEventListeners: function (dropdown) {\n        var input = dropdown.querySelector('input');\n        var list = dropdown.querySelectorAll('li');\n        var menu = dropdown.querySelector('.mdl-js-menu');\n\n        //show menu on mouse down or mouse up\n        input.onkeydown = function (event) {\n            if (event.keyCode == 38 || event.keyCode == 40) {\n                menu['MaterialMenu'].show();\n            }\n        };\n\n        //return focus to input\n        menu.onkeydown = function (event) {\n            if (event.keyCode == 13) {\n                input.focus();\n            }\n        };\n\n        [].forEach.call(list, function (li) {\n            li.onclick = function () {\n                input.value = li.textContent;\n                dropdown.MaterialTextfield.change(li.textContent); // handles css class changes\n                setTimeout( function() {\n                    dropdown.MaterialTextfield.updateClasses_(); //update css class\n                }, 250 );\n\n                // update input with the \"id\" value\n                input.dataset.val = li.dataset.val || '';\n\n                if (\"createEvent\" in document) {\n                    var evt = document.createEvent(\"HTMLEvents\");\n                    evt.initEvent(\"change\", false, true);\n                    input.dispatchEvent(evt);\n                } else {\n                    input.fireEvent(\"onchange\");\n                }\n            };\n        });\n    },\n    init: function (selector) {\n        var dropdowns = document.querySelectorAll(selector);\n        [].forEach.call(dropdowns, function (i) {\n            mdlSelect.addEventListeners(i);\n            i.style.width = i.querySelector('.mdl-menu').clientWidth + 'px';\n        });\n    }\n};"],"sourceRoot":"/source/"}